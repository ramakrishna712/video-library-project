{"ast":null,"code":"import isFunction from'./isFunction.js';import isMasked from'./_isMasked.js';import isObject from'./isObject.js';import toSource from'./_toSource.js';/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */var reRegExpChar=/[\\\\^$.*+?()[\\]{}|]/g;/** Used to detect host constructors (Safari). */var reIsHostCtor=/^\\[object .+?Constructor\\]$/;/** Used for built-in method references. */var funcProto=Function.prototype,objectProto=Object.prototype;/** Used to resolve the decompiled source of functions. */var funcToString=funcProto.toString;/** Used to check objects for own properties. */var hasOwnProperty=objectProto.hasOwnProperty;/** Used to detect if a method is native. */var reIsNative=RegExp('^'+funcToString.call(hasOwnProperty).replace(reRegExpChar,'\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,'$1.*?')+'$');/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */function baseIsNative(value){if(!isObject(value)||isMasked(value)){return false;}var pattern=isFunction(value)?reIsNative:reIsHostCtor;return pattern.test(toSource(value));}export default baseIsNative;","map":{"version":3,"names":["isFunction","isMasked","isObject","toSource","reRegExpChar","reIsHostCtor","funcProto","Function","prototype","objectProto","Object","funcToString","toString","hasOwnProperty","reIsNative","RegExp","call","replace","baseIsNative","value","pattern","test"],"sources":["C:/Users/Rama Krishna/videolibrary-app/frontend/src/node_modules/lodash-es/_baseIsNative.js"],"sourcesContent":["import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n"],"mappings":"AAAA,MAAO,CAAAA,UAAU,KAAM,iBAAiB,CACxC,MAAO,CAAAC,QAAQ,KAAM,gBAAgB,CACrC,MAAO,CAAAC,QAAQ,KAAM,eAAe,CACpC,MAAO,CAAAC,QAAQ,KAAM,gBAAgB,CAErC;AACA;AACA;AACA,GACA,GAAI,CAAAC,YAAY,CAAG,qBAAqB,CAExC,iDACA,GAAI,CAAAC,YAAY,CAAG,6BAA6B,CAEhD,2CACA,GAAI,CAAAC,SAAS,CAAGC,QAAQ,CAACC,SAAS,CAC9BC,WAAW,CAAGC,MAAM,CAACF,SAAS,CAElC,0DACA,GAAI,CAAAG,YAAY,CAAGL,SAAS,CAACM,QAAQ,CAErC,gDACA,GAAI,CAAAC,cAAc,CAAGJ,WAAW,CAACI,cAAc,CAE/C,4CACA,GAAI,CAAAC,UAAU,CAAGC,MAAM,CAAC,GAAG,CACzBJ,YAAY,CAACK,IAAI,CAACH,cAAc,CAAC,CAACI,OAAO,CAACb,YAAY,CAAE,MAAM,CAAC,CAC9Da,OAAO,CAAC,wDAAwD,CAAE,OAAO,CAAC,CAAG,GAChF,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAC,YAAYA,CAACC,KAAK,CAAE,CAC3B,GAAI,CAACjB,QAAQ,CAACiB,KAAK,CAAC,EAAIlB,QAAQ,CAACkB,KAAK,CAAC,CAAE,CACvC,MAAO,MAAK,CACd,CACA,GAAI,CAAAC,OAAO,CAAGpB,UAAU,CAACmB,KAAK,CAAC,CAAGL,UAAU,CAAGT,YAAY,CAC3D,MAAO,CAAAe,OAAO,CAACC,IAAI,CAAClB,QAAQ,CAACgB,KAAK,CAAC,CAAC,CACtC,CAEA,cAAe,CAAAD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}