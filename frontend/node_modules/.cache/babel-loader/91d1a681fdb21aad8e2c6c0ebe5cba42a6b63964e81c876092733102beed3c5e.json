{"ast":null,"code":"import isSymbol from'./isSymbol.js';/** Used as references for various `Number` constants. */var INFINITY=1/0;/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */function toKey(value){if(typeof value=='string'||isSymbol(value)){return value;}var result=value+'';return result=='0'&&1/value==-INFINITY?'-0':result;}export default toKey;","map":{"version":3,"names":["isSymbol","INFINITY","toKey","value","result"],"sources":["C:/Users/Rama Krishna/videolibrary-app/frontend/src/node_modules/lodash-es/_toKey.js"],"sourcesContent":["import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n"],"mappings":"AAAA,MAAO,CAAAA,QAAQ,KAAM,eAAe,CAEpC,yDACA,GAAI,CAAAC,QAAQ,CAAG,CAAC,CAAG,CAAC,CAEpB;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAC,KAAKA,CAACC,KAAK,CAAE,CACpB,GAAI,MAAO,CAAAA,KAAK,EAAI,QAAQ,EAAIH,QAAQ,CAACG,KAAK,CAAC,CAAE,CAC/C,MAAO,CAAAA,KAAK,CACd,CACA,GAAI,CAAAC,MAAM,CAAID,KAAK,CAAG,EAAG,CACzB,MAAQ,CAAAC,MAAM,EAAI,GAAG,EAAK,CAAC,CAAGD,KAAK,EAAK,CAACF,QAAQ,CAAI,IAAI,CAAGG,MAAM,CACpE,CAEA,cAAe,CAAAF,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}