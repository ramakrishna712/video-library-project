{"ast":null,"code":"'use strict';import CanceledError from'./CanceledError.js';/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */class CancelToken{constructor(executor){if(typeof executor!=='function'){throw new TypeError('executor must be a function.');}let resolvePromise;this.promise=new Promise(function promiseExecutor(resolve){resolvePromise=resolve;});const token=this;// eslint-disable-next-line func-names\nthis.promise.then(cancel=>{if(!token._listeners)return;let i=token._listeners.length;while(i-->0){token._listeners[i](cancel);}token._listeners=null;});// eslint-disable-next-line func-names\nthis.promise.then=onfulfilled=>{let _resolve;// eslint-disable-next-line func-names\nconst promise=new Promise(resolve=>{token.subscribe(resolve);_resolve=resolve;}).then(onfulfilled);promise.cancel=function reject(){token.unsubscribe(_resolve);};return promise;};executor(function cancel(message,config,request){if(token.reason){// Cancellation has already been requested\nreturn;}token.reason=new CanceledError(message,config,request);resolvePromise(token.reason);});}/**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */throwIfRequested(){if(this.reason){throw this.reason;}}/**\n   * Subscribe to the cancel signal\n   */subscribe(listener){if(this.reason){listener(this.reason);return;}if(this._listeners){this._listeners.push(listener);}else{this._listeners=[listener];}}/**\n   * Unsubscribe from the cancel signal\n   */unsubscribe(listener){if(!this._listeners){return;}const index=this._listeners.indexOf(listener);if(index!==-1){this._listeners.splice(index,1);}}toAbortSignal(){const controller=new AbortController();const abort=err=>{controller.abort(err);};this.subscribe(abort);controller.signal.unsubscribe=()=>this.unsubscribe(abort);return controller.signal;}/**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */static source(){let cancel;const token=new CancelToken(function executor(c){cancel=c;});return{token,cancel};}}export default CancelToken;","map":{"version":3,"names":["CanceledError","CancelToken","constructor","executor","TypeError","resolvePromise","promise","Promise","promiseExecutor","resolve","token","then","cancel","_listeners","i","length","onfulfilled","_resolve","subscribe","reject","unsubscribe","message","config","request","reason","throwIfRequested","listener","push","index","indexOf","splice","toAbortSignal","controller","AbortController","abort","err","signal","source","c"],"sources":["C:/Users/Rama Krishna/videolibrary-app/frontend/src/node_modules/axios/lib/cancel/CancelToken.js"],"sourcesContent":["'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}